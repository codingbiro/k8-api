# GitHub recommends pinning actions to a commit SHA.
# To get a newer version, you will need to update the SHA.
# You can also reference a tag or branch, but the action may change without warning.

name: Build and Deploy to GKE

on:
  push:
    branches:
      - master

env:
  DEPLOYMENT_NAME: ${{ github.repository }}
  K8S_NAMESPACE: "default"
  CHART_SECRET_NAME: "c-secret"
  CHART_IMAGE_PULL_SECRET_NAME: "w-c-secret"

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    # Setup gcloud CLI
    - uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
      with:
        service_account_key: ${{ secrets.GKE_SA_KEY }}
        project_id: ${{ secrets.GKE_PROJECT }}

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - run: |-
        gcloud --quiet auth configure-docker

    # Get the GKE credentials so we can deploy to the cluster
    - uses: google-github-actions/get-gke-credentials@fb08709ba27618c31c09e014e1d8364b02e5042e
      with:
        cluster_name: ${{ secrets.GKE_CLUSTER }}
        location: ${{ secrets.GKE_ZONE }}
        credentials: ${{ secrets.GKE_SA_KEY }}
    
    # Setup .env file
    - name: Setup .env file for docker build
      run: |
        cd ./api && touch .env
        echo "${{ secrets.ENV_BASE64 }}" | base64 --decode >> .env
        echo "DATABASE_URL=$(echo $(cat .env | grep DATABASE_URL= | cut -d '=' -f2))" >> $GITHUB_ENV

    - name: "Create K8S namespace if it doesn't exist"
      run: kubectl create namespace ${{ env.K8S_NAMESPACE }} --dry-run=client -o json | kubectl apply -f -

    - name: "Create imagePullSecret"
      run: |
        kubectl create secret docker-registry ${{ env.CHART_IMAGE_PULL_SECRET_NAME }} \
          -n ${{ env.K8S_NAMESPACE }} \
          --dry-run -o yaml \
          --docker-server=gcr.io \
          --docker-username=_json_key \
          --docker-email=${{ secrets.GKE_EMAIL }} \
          --docker-password=${{ secrets.GKE_SA_KEY }} | \
        kubectl apply -f -
    - name: "Create .env secrets"
      uses: azure/k8s-create-secret@v2
      with:
        namespace: ${{ env.K8S_NAMESPACE }}
        secret-type: 'generic'
        secret-name: ${{ env.CHART_SECRET_NAME }}
        data: '{ ".env": "${{ env.ENV_FILE_BASE64 }}" }'

    # Build the Docker image
    - name: Build
      run: |-
        cd ./api && docker build \
          --tag "gcr.io/${{ secrets.GKE_PROJECT }}/${{ github.repository }}:${{ github.sha }}" \
          --build-arg GITHUB_SHA="${{ github.sha }}" \
          --build-arg GITHUB_REF="${{ github.ref }}" \
          .

    # Push the Docker image to Google Container Registry
    - name: Publish
      run: |-
        docker push "gcr.io/${{ secrets.GKE_PROJECT }}/${{ github.repository }}:${{ github.sha }}"

    - uses: azure/k8s-bake@v2.2
      with:
        renderEngine: 'helm'
        helmChart: './helm/'
        helm-version: 'latest'
        silent: 'false'

    - name: "Deploys API using the Helm output"
      uses: Azure/k8s-deploy@v1
      with:
        manifests: |
          ${{ steps.bake-web.outputs.manifestsBundle }}
        namespace: ${{ env.K8S_NAMESPACE }}
        imagepullsecrets: |
          ${{ env.CHART_IMAGE_PULL_SECRET_NAME }}

    # Clean up
    - name: Delete .env file
      run: |
        cd ./api && rm .env
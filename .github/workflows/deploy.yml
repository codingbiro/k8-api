# GitHub recommends pinning actions to a commit SHA.
# To get a newer version, you will need to update the SHA.
# You can also reference a tag or branch, but the action may change without warning.

name: Build and Deploy to GKE

on:
  push:
    branches:
      - master

env:
  DEPLOYMENT_NAME: ${{ github.repository }}
  K8S_NAMESPACE: "default"
  CHART_SECRET_NAME: "test-secret"
  CHART_IMAGE_PULL_SECRET_NAME: "w-c-secret"

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Login to GCR
      uses: docker/login-action@v2
      with:
        registry: gcr.io
        username: _json_key
        password: ${{ secrets.GKE_SA_KEY }}

    - name: 'Authenticate to Google Cloud'
      id: 'auth'
      uses: 'google-github-actions/auth@v0'
      with:
        credentials_json: '${{ secrets.GKE_SA_KEY }}'

    # Get the GKE credentials, so we can deploy to the cluster
    - name: "Get credentials for the GKE cluster"
      uses: google-github-actions/get-gke-credentials@v0
      with:
        cluster_name: ${{ secrets.GKE_CLUSTER }}
        location: ${{ secrets.GKE_ZONE }}

    # Create Kubernetes namespace if it does not exist
    - name: "Create K8S namespace if it doesn't exist"
      run: kubectl create namespace ${{ env.K8S_NAMESPACE }} --dry-run=client -o json | kubectl apply -f -

    - name: "Create imagePullSecret"
      run: |
        touch docker.json | \
        echo ${{ secrets.GKE_SA_KEY }} >> docker.json | \
        kubectl create secret docker-registry ${{ env.CHART_IMAGE_PULL_SECRET_NAME }} \
          -n ${{ env.K8S_NAMESPACE }} \
          --dry-run -o yaml \
          --docker-server gcr.io \
          --docker-username _json_key \
          --docker-email ${{ secrets.GKE_EMAIL }} \
          --docker-password="$(cat ./docker.json)" | \
        kubectl apply -f - | \
        rm docker.json

    - name: "Create .env secrets"
      uses: azure/k8s-create-secret@v2
      with:
        namespace: ${{ env.K8S_NAMESPACE }}
        secret-type: 'generic'
        secret-name: ${{ env.CHART_SECRET_NAME }}
        data: '{ ".env": "${{ env.ENV_BASE64 }}" }'

    # Build the Docker image
    - name: Build
      run: |-
        cd ./api && docker build \
          --tag "gcr.io/${{ secrets.GKE_PROJECT }}/${{ github.repository }}:${{ github.sha }}" \
          --build-arg GITHUB_SHA="${{ github.sha }}" \
          --build-arg GITHUB_REF="${{ github.ref }}" \
          .

    # Push the Docker image to Google Container Registry
    - name: Publish
      run: |-
        docker push "gcr.io/${{ secrets.GKE_PROJECT }}/${{ github.repository }}:${{ github.sha }}"

    - name: Bake
      uses: azure/k8s-bake@v2.2
      id: bake-web
      with:
        renderEngine: 'helm'
        releaseName: 'apirelease'
        helmChart: './helm/'
        helm-version: 'latest'
        silent: 'false'
        overrides: |
            container.imageWithTag:gcr.io/${{ secrets.GKE_PROJECT }}/${{ github.repository }}:${{ github.sha }}
            volumes[0].name:${{ env.CHART_SECRET_NAME }}-volume
            volumes[0].secret.secretName:${{ env.CHART_SECRET_NAME }}
            volumeMounts[0].name:${{ env.CHART_SECRET_NAME }}-volume
            volumeMounts[0].mountPath:"/usr/app/"
            volumeMounts[0].readOnly:true

    - name: "Deploys API using the Helm output"
      uses: Azure/k8s-deploy@v1
      with:
        manifests: |
          ${{ steps.bake-web.outputs.manifestsBundle }}
        namespace: ${{ env.K8S_NAMESPACE }}
        imagepullsecrets: |
          ${{ env.CHART_IMAGE_PULL_SECRET_NAME }}

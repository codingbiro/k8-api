name: Build and Deploy to GKE

on:
  push:
    branches:
      - master

env:
  DEPLOYMENT_NAME: ${{ github.repository }}
  K8S_NAMESPACE: default
  CHART_SECRET_NAME: test-secret
  CHART_IMAGE_PULL_SECRET_NAME: w-c-secret
  RELEASE_NAME: apirelease
  // REGISTRY: gcr.io
  REGISTRY_WITH_IMAGE: ${{ secrets.REGISTRY }}/${{ secrets.GKE_PROJECT }}/${{ github.repository }}:${{ github.sha }}

jobs:
  setup-build-publish-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Login to GCR
      uses: docker/login-action@v2
      with:
        registry: ${{ secrets.REGISTRY }}
        username: _json_key
        password: ${{ secrets.GKE_SA_KEY }}

    - name: Authenticate to Google Cloud
      id: auth
      uses: google-github-actions/auth@v0
      with:
        credentials_json: ${{ secrets.GKE_SA_KEY }}

    - name: Get credentials for the GKE cluster
      uses: google-github-actions/get-gke-credentials@v0
      with:
        cluster_name: ${{ secrets.GKE_CLUSTER }}
        location: ${{ secrets.GKE_ZONE }}

    - name: Create K8S namespace if it does not exist
      run: kubectl create namespace ${{ env.K8S_NAMESPACE }} --dry-run=client -o json | kubectl apply -f -

    - name: Create imagePullSecret
      run: |
        touch docker.json | \
        echo ${{ secrets.GKE_SA_KEY }} >> docker.json | \
        kubectl create secret docker-registry ${{ env.CHART_IMAGE_PULL_SECRET_NAME }} \
          -n ${{ env.K8S_NAMESPACE }} \
          --dry-run -o yaml \
          --docker-server ${{ secrets.REGISTRY }} \
          --docker-username _json_key \
          --docker-email ${{ secrets.GKE_EMAIL }} \
          --docker-password="$(cat ./docker.json)" | \
        kubectl apply -f - | \
        rm docker.json

    - name: Build Docker image
      run: |-
        cd ./api && docker build \
          --tag "${{ env.REGISTRY_WITH_IMAGE }}" \
          --build-arg GITHUB_SHA="${{ github.sha }}" \
          --build-arg GITHUB_REF="${{ github.ref }}" \
          .

    - name: Publish image to registry
      run: |-
        docker push ${{ env.REGISTRY_WITH_IMAGE }}

    - name: Bake with Helm
      uses: azure/k8s-bake@v2.2
      id: bake-web
      with:
        renderEngine: helm
        releaseName: ${{ env.RELEASE_NAME }}
        helmChart: ./helm/
        helm-version: latest
        silent: false
        overrides: |
            container.imageWithTag:${{ env.REGISTRY_WITH_IMAGE }}
            database.url:${{ secrets.DB_URL }}

    - name: Deploys API using the Helm output
      uses: azure/k8s-deploy@v1
      with:
        manifests: |
          ${{ steps.bake-web.outputs.manifestsBundle }}
        namespace: ${{ env.K8S_NAMESPACE }}
        imagepullsecrets: |
          ${{ env.CHART_IMAGE_PULL_SECRET_NAME }}
